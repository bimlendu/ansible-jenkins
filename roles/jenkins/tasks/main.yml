---
- name: Install nfs/efs client packages.
  apt:
    name:
      - nfs-common
    state: installed

- name: Mount EFS filesystem.
  mount:
    path: "{{ jenkins_home }}"
    src: "{{ efs_filesystem_dns }}:/" 
    fstype: nfs4
    opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev
    state: mounted

- pause:
    minutes: 1

- name: Add Jenkins apt repository key.
  apt_key:
    url: "{{ jenkins_repo_key_url }}"
    state: present

- name: Add Jenkins apt repository.
  apt_repository:
    repo: "{{ jenkins_repo_url }}"
    state: present
    update_cache: yes

- name: Install packages.
  apt:
    name:
      - jenkins={{ jenkins_version }}
    state: installed

- pause:
    minutes: 1

- name: Disable Jenkins CLI over Remoting
  copy:
    src: jenkins.CLI.xml
    dest: "{{ jenkins_home }}/jenkins.CLI.xml"
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: 0644

- name: Create custom init scripts directory.
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: 0775

- name: Add init scripts
  template:
    src: "{{ item }}"
    dest: "{{ jenkins_home }}/init.groovy.d/{{ item | basename }}"
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    mode: 0775
  with_fileglob:
    - ../templates/*
  notify:
    - restart jenkins

- name: Bypass - jenkins.install.InstallUtil.lastExecVersion
  copy:
    content: "{{ jenkins_version }}"
    dest: "{{ jenkins_home }}/jenkins.install.InstallUtil.lastExecVersion"
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
    remote_src: True

- name: Ensure Jenkins is started and runs on startup.
  service: name=jenkins state=started enabled=yes